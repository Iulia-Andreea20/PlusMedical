name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set environment variables
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> $GITHUB_ENV
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> $GITHUB_ENV
          echo "POSTGRES_VERSION=${{ secrets.POSTGRES_VERSION }}" >> $GITHUB_ENV
          echo "POSTGRES_VOLUME=${{ secrets.POSTGRES_VOLUME }}" >> $GITHUB_ENV
          echo "UI_HOST=${{ secrets.UI_HOST }}" >> $GITHUB_ENV
          echo "UI_PORT=${{ secrets.UI_PORT }}" >> $GITHUB_ENV
          echo "UI_VOLUME=${{ secrets.UI_VOLUME }}" >> $GITHUB_ENV
          echo "APP_NETWORK=${{ secrets.APP_NETWORK }}" >> $GITHUB_ENV
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
          echo "APP_TAG=$(cat APP_TAG)" >> $GITHUB_ENV


      - name: Build Docker images
        run: |
          docker-compose -f /docker/docker-compose.prod.yml build

      - name: Tag and Push UI Image
        run: |
            docker tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.UI_HOST }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.UI_HOST }}:${APP_TAG}
            docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.UI_HOST }}:${APP_TAG}
  
      - name: Tag and push DB image
        run: |
            echo ${DB_TAG}
            docker tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.POSTGRES_HOST }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.POSTGRES_HOST }}:${APP_TAG}
            docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.POSTGRES_HOST }}:${APP_TAG}
